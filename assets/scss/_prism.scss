@import "palette";

pre[class*="language-"],
:not(pre) > code {
  @apply bg-shade-4;
  @apply text-sm;
  @apply border;
  @apply border-shade-3;
  @apply rounded-sm;
}

pre[class*="language-"],
code[class*="language-"] {
  @apply leading-[1.7];
  @apply whitespace-pre;
  @apply hyphens-none;

  .table {
    display: inline !important;
  }
}

pre[class*="language-"] {
  @apply -mx-4;
  @apply py-3;
  @apply border-x-0;
  @apply overflow-x-auto;

  @screen md {
    @apply mx-0;
    @apply border-x;
  }
}

code[class*="language-"] {
  // Workaround for background culling
  // https://stackoverflow.com/a/8513330
  @apply min-w-full;
  @apply float-left;
  @apply px-4;
}

:not(pre) > code {
  padding: 0.05rem 0.3rem 0.15rem 0.3rem;
}

[class*="language-"] .namespace {
  @apply opacity-75;
}

$frost-0: #8fbcbb;
$frost-1: #88c0d0;
$frost-2: #81a1c1;
$frost-3: #5e81ac;
$aurora-0: #bf616a;
$aurora-1: #d08770;
$aurora-2: #ebcb8b;
$aurora-3: #a3be8c;
$aurora-4: #b48ead;

:root {
  --prism-comment: #b8bfcc;
  --prism-deleted: #{scale-color($aurora-0, $lightness: -10%, $saturation: 20%)};
  --prism-declaration: #{scale-color($frost-1, $lightness: -10%, $saturation: 20%)};
  --prism-keyword: #{scale-color($frost-2, $lightness: -10%, $saturation: 20%)};
  --prism-number: #{scale-color($aurora-4, $lightness: -10%, $saturation: 20%)};
  --prism-string: #{scale-color($aurora-3, $lightness: -10%, $saturation: 20%)};
}

.dark {
  --prism-comment: #636f88;
  --prism-deleted: #{$aurora-0};
  --prism-declaration: #{$frost-1};
  --prism-keyword: #{$frost-2};
  --prism-number: #{$aurora-4};
  --prism-string: #{$aurora-3};
}

.token.cdata,
.token.comment,
.token.doctype,
.token.prolog {
  color: var(--prism-comment);
}

.token.boolean,
.token.builtin,
.token.constant,
.token.entity,
.token.keyword,
.token.operator,
.token.property,
.token.punctuation,
.token.symbol,
.token.tag,
.token.url,
.token.variable {
  color: var(--prism-keyword);
}

.token.deleted {
  color: var(--prism-deleted);
}

.token.number {
  color: var(--prism-number);
}

.token.attr-name,
.token.char,
.token.inserted,
.token.important,
.token.regex,
.token.selector,
.token.string {
  color: var(--prism-string);
}

.token.atrule,
.token.attr-value,
.token.function,
.token.class-name {
  color: var(--prism-declaration);
}

.token.bold,
.token.important {
  @apply font-bold;
}

pre > code .token.deleted:not(.prefix),
code .token.inserted:not(.prefix) {
  @apply block;
  @apply -mx-4;
  @apply text-inherit;

  & > *:first-child {
    @apply ml-4;
  }

  & > *:last-child {
    @apply mr-4;
  }
}

pre > code .token.deleted:not(.prefix) {
  background-color: rgba(255, 0, 0, 0.1);
}

pre > code .token.inserted:not(.prefix) {
  background-color: rgba(0, 255, 128, 0.1);
}
